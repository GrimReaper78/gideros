<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<object name="FontBase" page="FontBase" parent="Object" type="gideros" version="Gideros 2011.6"><![CDATA[<br />
`FontBase` is the base class for `Font` and `TTFont` classes.<br />
<br />
]]>
  <platform>android</platform>
  <platform>ios</platform>
  <platform>mac</platform>
  <platform>pc</platform>
  <platform>html5</platform>
  <platform>winrt</platform>
  <platform>win32</platform>
  <constant name="FontBase.TLF_BOTTOM" page="FontBase.TLF_BOTTOM" value="TLF_BOTTOM" version="Gideros 2017.10"><![CDATA[Align text to the bottom.]]></constant>
  <constant name="FontBase.TLF_TOP" page="FontBase.TLF_TOP" value="TLF_TOP" version="Gideros 2017.10"><![CDATA[Align text to the top.]]></constant>
  <constant name="FontBase.TLF_CENTER" page="FontBase.TLF_CENTER" value="TLF_CENTER" version="Gideros 2017.10"><![CDATA[Center text horizontally.]]></constant>
  <constant name="FontBase.TLF_VCENTER" page="FontBase.TLF_VCENTER" value="TLF_VCENTER" version="Gideros 2017.10"><![CDATA[Center text vertically.]]></constant>
  <constant name="FontBase.TLF_RIGHT" page="FontBase.TLF_RIGHT" value="TLF_RIGHT" version="Gideros 2017.10"><![CDATA[Align text to the right.]]></constant>
  <constant name="FontBase.TLF_LEFT" page="FontBase.TLF_LEFT" value="TLF_LEFT" version="Gideros 2017.10"><![CDATA[Align text to the left.]]></constant>
  <constant name="FontBase.TLF_JUSTIFIED" page="FontBase.TLF_JUSTIFIED" value="TLF_JUSTIFIED" version="Gideros 2017.10"><![CDATA[Justify text horizontally.]]></constant>
  <constant name="FontBase.TLF_NOWRAP" page="FontBase.TLF_NOWRAP" value="TLF_NOWRAP" version="Gideros 2017.10"><![CDATA[Don't wrap long lines.]]></constant>
  <constant name="FontBase.TLF_REF_BASELINE" page="FontBase.TLF_REF_BASELINE" value="TLF_REF_BASELINE" version="Gideros 2017.10"><![CDATA[Use baseline as reference (default).]]></constant>
  <constant name="FontBase.TLF_REF_TOP" page="FontBase.TLF_REF_TOP" value="TLF_REF_TOP" version="Gideros 2017.10"><![CDATA[Use top of line as reference.]]></constant>
  <constant name="FontBase.TLF_REF_MIDDLE" page="FontBase.TLF_REF_MIDDLE" value="TLF_REF_MIDDLE" version="Gideros 2017.10"><![CDATA[Use middle of line as reference.]]></constant>
  <constant name="FontBase.TLF_REF_BOTTOM" page="FontBase.TLF_REF_BOTTOM" value="TLF_REF_BOTTOM" version="Gideros 2017.10"><![CDATA[Use bottom of line as reference.]]></constant>
  <constant name="FontBase.TLF_BREAKWORDS" page="FontBase.TLF_BREAKWORDS" value="TLF_BREAKWORDS" version="Gideros 2018.3.2"><![CDATA[Allow Gideros to break words that exceed required width.]]></constant>
  <method name="FontBase:getBounds" page="getBounds" shortdesc="returns the tight bounding rectangle of the characters in the string specified by text" version="Gideros 2011.6"><![CDATA[<br />
Returns the tight bounding rectangle of the characters in the string specified by `text`.<br />
<br />
]]>
    <parameter name="text" optional="false" type="string"/>
    <return type="number"><![CDATA[x coordinate of the bound]]></return>
    <return type="number"><![CDATA[y coordinate of the bound]]></return>
    <return type="number"><![CDATA[width of the bound]]></return>
    <return type="number"><![CDATA[height of the bound]]></return>
  </method>
  <method name="FontBase:getAdvanceX" page="getAdvanceX" shortdesc="" version="Gideros 2011.6"><![CDATA[<br />
Returns the width of the first `size` characters of `text`. <br />
Note that this value is not equal to the 3rd return value (width) of `getBounds()`. <br />
`getBounds()` returns a rectangle describing the bounds this string will cover <br />
whereas `getAdvanceX()` returns the distance to where the next string should be drawn.<br />
<br />
]]>
    <parameter name="text" optional="false" type="string"/>
    <parameter name="letterSpacing" optional="false" type="number, default = 0"/>
    <parameter name="size" optional="false" type="number, optional"/>
    <return type="number"><![CDATA[The width of the first size characters of text.]]></return>
  </method>
  <method name="FontBase:getCharIndexAtOffset" page="getCharIndexAtOffset" shortdesc="" version="Gideros 2018.3.1"><![CDATA[<br />
Returns the the offset within the given text string to which correponds the given X offset in the drawn text. <br />
<br />
]]>
    <parameter name="text" optional="false" type="string"/>
    <parameter name="offset" optional="false" type="number"/>
    <parameter name="letterSpacing" optional="false" type="number, default = 0"/>
    <parameter name="size" optional="false" type="number, optional"/>
    <return type="number"><![CDATA[The offset within the text string. The decimal part indicate the relative distance throughout the character itself.]]></return>
  </method>
  <method name="FontBase:getAscender" page="getAscender" shortdesc="returns the ascender of the font" version="Gideros 2011.6"><![CDATA[<br />
Returns the ascender of the font. The ascender of a font is the distance from the baseline to the highest position characters extend to.<br />
<br />
]]>
    <return type="number"><![CDATA[The ascender of the font]]></return>
  </method>
  <method name="FontBase:getLineHeight" page="getLineHeight" shortdesc="returns the distance from one base line to the next" version="Gideros 2011.6"><![CDATA[<br />
Returns the distance from one base line to the next.<br />
<br />
]]>
    <return type="number"><![CDATA[The distance from one base line to the next.]]></return>
  </method>
  <method name="FontBase:layoutText" page="layoutText" shortdesc="compute layout of text with given constraints" version="Gideros 2017.10"><![CDATA[<br />
Compute the layout of the given text according to a given rectangular region size, layout flags and other parameters.<br />
<br />
Refer to `TextField:setLayout` for a description of the arguments.<br/>
The returned table contains the following fields:
- x,y,w,h: Computed bounding box of the full text
- lines: The number of lines used to display the text
- parts: Information about individual chunks of texts.
<br /><br />
Each table in the part field of the returned table describe the placement of chunks of text. Their fields are:
- text: The text to display in this chunk
- x,y,w,h: Computed bounding box of this chunk  
- dx,dy: Coordinates to draw this chunk at
- sep: separator character that came just after this chunk in text block
- line: line number this chunk belongs to
]]>
    <parameter name="text" optional="false" type="string"/>
    <parameter name="width" optional="false" type="number"/>
    <parameter name="height" optional="false" type="number"/>
    <parameter name="flags" optional="false" type="number, default=FontBase.TLF_NOWRAP"/>
    <parameter name="letterSpacing" optional="false" type="number, default = 0"/>
    <parameter name="lineSpacing" optional="false" type="number, default = 0"/>
    <parameter name="tabSpace" optional="false" type="number, default = 4"/>
    <parameter name="breakChar" optional="true" type="string"/>
    <return type="table"><![CDATA[A table describing how to draw the given text.]]></return>
  </method>
</object>
