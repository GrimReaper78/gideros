<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<object name="utf8" page="utf8" parent="" type="lua" version="Gideros 2016.06"><![CDATA[utf8 string library]]>
  <platform>android</platform>
  <platform>ios</platform>
  <platform>mac</platform>
  <platform>pc</platform>
  <platform>html5</platform>
  <platform>winrt</platform>
  <platform>win32</platform>
  <constant name="utf8.charpattern" page="charpattern" value="[\0-\x7F\xC2-\xF4][\x80-\xBF]*" version="Gideros 2016.06"><![CDATA[The pattern (a string, not a function) "[\0-\x7F\xC2-\xF4][\x80-\xBF]*", which matches exactly one UTF-8 byte sequence, assuming that the subject is a valid UTF-8 string.]]></constant>
  <method name="utf8.byte" page="byte" shortdesc="Returns the internal numerical codes of the characters" version="Gideros 2016.06"><![CDATA[Returns the internal numerical codes of the characters s[i], s[i+1], ..., s[j]. The default value for i is 1; the default value for j is i. These indices are corrected following the same rules of function string.sub.
Numerical codes are not necessarily portable across platforms.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="i" optional="true" type="number"><![CDATA[default is 1]]></parameter>
    <parameter name="j" optional="true" type="number"/>
    <return type="numbers"><![CDATA[Returns the internal numerical codes of the characters]]></return>
  </method>
  <method name="utf8.char" page="char" shortdesc="Returns a string from integers as characters" version="Gideros 2016.06"><![CDATA[Receives zero or more integers. Returns a string with length equal to the number of arguments, in which each character has the internal numerical code equal to its corresponding argument.
Numerical codes are not necessarily portable across platforms.]]>
    <parameter name="code1" optional="false" type="number"/>
    <parameter name="code2" optional="true" type="number"/>
    <parameter name="codeN" optional="true" type="number"/>
    <return type="string"><![CDATA[string with provided characters]]></return>
  </method>
  <method name="utf8.charpos" page="charpos" shortdesc="convert UTF-8 position to byte offset" version="Gideros 2016.06"><![CDATA[convert UTF-8 position to byte offset. if only offset is given, return byte offset of this UTF-8 char index. if charpos and offset is given, a new charpos will calculate, by add/subtract UTF-8 char offset to current charpos. in all case, it return a new char position, and code point (a number) at this position.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="charpos" optional="true" type="number"/>
    <parameter name="offset" optional="true" type="number"/>
    <return type="number"><![CDATA[return byte offset of this UTF-8 char index]]></return>
  </method>
  <method name="utf8.codepoint" page="codepoint" shortdesc="Returns the codepoints (as integers) from all characters" version="Gideros 2016.06"><![CDATA[Returns the codepoints (as integers) from all characters in s that start between byte position i and j (both included). The default for i is 1 and for j is i. It raises an error if it meets any invalid byte sequence.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="i" optional="true" type="number"/>
    <parameter name="j" optional="true" type="number"/>
    <return type="numbers"><![CDATA[Returns the codepoints (as integers) from all characters in s]]></return>
  </method>
  <method name="utf8.codes" page="codes" shortdesc="Returns values so that the construction" version="Gideros 2016.06"><![CDATA[Returns values so that the construction
for p, c in utf8.codes(s) do body end
will iterate over all characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.]]>
    <parameter name="s" optional="false" type="string"/>
    <return type="iterator"><![CDATA[iterator]]></return>
  </method>
  <method name="utf8.escape" page="escape" shortdesc="Escape a str to UTF-8 format string" version="Gideros 2016.06"><![CDATA[Escape a str to UTF-8 format string. It support several escape format:
%ddd - which ddd is a decimal number at any length: change Unicode code point to UTF-8 format. %{ddd} - same as %nnn but has bracket around. %uddd - same as %ddd, u stands Unicode %u{ddd} - same as %{ddd} %xhhh - hexadigit version of %ddd %x{hhh} same as %xhhh. %? - '?' stands for any other character: escape this character.]]>
    <parameter name="s" optional="false" type="string"/>
    <return type="string"><![CDATA[escaped string]]></return>
  </method>
  <method name="utf8.find" page="find" shortdesc="Looks for the first match of pattern in the string s" version="Gideros 2016.06"><![CDATA[Looks for the first match of pattern in the string s. If it finds a match, then find returns the indices of s where this occurrence starts and ends; otherwise, it returns nil. A third, optional numerical argument init specifies where to start the search; its default value is 1 and can be negative. A value of true as a fourth, optional argument plain turns off the pattern matching facilities, so the function does a plain "find substring" operation, with no characters in pattern being considered magic. Note that if plain is given, then init must be given as well.
If the pattern has captures, then in a successful match the captured values are also returned, after the two indices.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="pattern" optional="false" type="string"/>
    <parameter name="init" optional="true" type="number"/>
    <parameter name="plain" optional="true" type="boolean"/>
    <return type="numbers"><![CDATA[ the indices of s where this occurrence starts and ends; otherwise, it returns nil]]></return>
  </method>
  <method name="utf8.fold" page="fold" shortdesc="convert UTF-8 string s to folded case used to compare by ignore case" version="Gideros 2016.06"><![CDATA[convert UTF-8 string s to folded case used to compare by ignore case. if s is a number, it's treat as a code point and return a convert code point (number). utf8.lower/utf8.upper has the same extension.]]>
    <parameter name="s" optional="false" type="string"/>
    <return type="string"><![CDATA[folded case string]]></return>
  </method>
  <method name="utf8.gmatch" page="gmatch" shortdesc="Returns an iterator function" version="Gideros 2016.06"><![CDATA[Returns an iterator function that, each time it is called, returns the next captures from pattern over the string s. If pattern specifies no captures, then the whole match is produced in each call.
For this function, a caret '^' at the start of a pattern does not work as an anchor, as this would prevent the iteration.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="pattern" optional="false" type="string"/>
    <return type="function"><![CDATA[iterator function]]></return>
  </method>
  <method name="utf8.gsub" page="gsub" shortdesc="Returns a copy of s in which all (or the first n, if given) occurrences of the pattern have been replaced" version="Gideros 2016.06"><![CDATA[Returns a copy of s in which all (or the first n, if given) occurrences of the pattern have been replaced by a replacement string specified by repl, which can be a string, a table, or a function. gsub also returns, as its second value, the total number of matches that occurred. The name gsub comes from Global SUBstitution.
If repl is a string, then its value is used for replacement. The character % works as an escape character: any sequence in repl of the form %d, with d between 1 and 9, stands for the value of the d-th captured substring. The sequence %0 stands for the whole match. The sequence %% stands for a single %.
If repl is a table, then the table is queried for every match, using the first capture as the key.
If repl is a function, then this function is called every time a match occurs, with all captured substrings passed as arguments, in order.
In any case, if the pattern specifies no captures, then it behaves as if the whole pattern was inside a capture.
If the value returned by the table query or by the function call is a string or a number, then it is used as the replacement string; otherwise, if it is false or nil, then there is no replacement (that is, the original match is kept in the string).]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="pattern" optional="false" type="string"/>
    <parameter name="repl" optional="false" type="varies"/>
    <parameter name="n" optional="true" type="number"/>
    <return type="string"><![CDATA[replaced string]]></return>
    <return type="number"><![CDATA[number of substitutions]]></return>
  </method>
  <method name="utf8.insert" page="insert" shortdesc="Insert a substring to s" version="Gideros 2016.06"><![CDATA[Insert a substring to s. If idx is given, insert substring before char at this index, otherwise substring will concat to s. idx can be negative.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="idx" optional="true" type="number"><![CDATA[index where to insert]]></parameter>
    <parameter name="substring" optional="true" type="string"/>
    <return type="string"><![CDATA[new string]]></return>
  </method>
  <method name="utf8.len" page="len" shortdesc="Returns the number of UTF-8 characters in string" version="Gideros 2016.06"><![CDATA[Returns the number of UTF-8 characters in string s that start between positions i and j (both inclusive). The default for i is 1 and for j is -1. If it finds any invalid byte sequence, returns a false value plus the position of the first invalid byte.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="i" optional="true" type="number"/>
    <parameter name="j" optional="true" type="number"/>
    <return type="number"><![CDATA[number of characters]]></return>
  </method>
  <method name="utf8.lower" page="lower" shortdesc="Receives a string and returns a copy of this string with all uppercase letters changed to lowercase" version="Gideros 2016.06"><![CDATA[Receives a string and returns a copy of this string with all uppercase letters changed to lowercase. All other characters are left unchanged. The definition of what an uppercase letter is depends on the current locale.]]>
    <parameter name="s" optional="false" type="string"/>
    <return type="string"><![CDATA[lowercased string]]></return>
  </method>
  <method name="utf8.match" page="match" shortdesc="Looks for the first match of pattern in the string s" version="Gideros 2016.06"><![CDATA[Looks for the first match of pattern in the string s. If it finds one, then match returns the captures from the pattern; otherwise it returns nil. If pattern specifies no captures, then the whole match is returned. A third, optional numerical argument init specifies where to start the search; its default value is 1 and can be negative.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="pattern" optional="false" type="string"/>
    <parameter name="init" optional="true" type="number"/>
    <return type="strings"><![CDATA[captures]]></return>
  </method>
  <method name="utf8.ncasecmp" page="ncasecmp" shortdesc="Compare a and b without case" version="Gideros 2016.06"><![CDATA[Compare a and b without case, -1 means a < b, 0 means a == b and 1 means a > b.]]>
    <parameter name="a" optional="false" type="string"/>
    <parameter name="b" optional="false" type="string"/>
    <return type="number"><![CDATA[compare state]]></return>
  </method>
  <method name="utf8.next" page="next" shortdesc="Iterate though the UTF-8 string s" version="Gideros 2016.06"><![CDATA[Iterate though the UTF-8 string s. If only s is given, it can used as a iterator:
for pos, code in utf8.next, "utf8-string" do
-- ...
end
if only charpos is given, return the next byte offset of in string. if charpos and offset is given, a new charpos will calculate, by add/subtract UTF-8 char offset to current charpos. in all case, it return a new char position (in bytes), and code point (a number) at this position.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="charpos" optional="true" type="number"/>
    <parameter name="offset" optional="true" type="number"/>
    <return type="varies"><![CDATA[next iteration]]></return>
  </method>
  <method name="utf8.offset" page="offset" shortdesc="Returns the position (in bytes) where the encoding of the n-th character of s" version="Gideros 2016.06"><![CDATA[Returns the position (in bytes) where the encoding of the n-th character of s (counting from position i) starts. A negative n gets characters before position i. The default for i is 1 when n is non-negative and #s + 1 otherwise, so that utf8.offset(s, -n) gets the offset of the n-th character from the end of the string. If the specified character is neither in the subject nor right after its end, the function returns nil.
As a special case, when n is 0 the function returns the start of the encoding of the character that contains the i-th byte of s.
This function assumes that s is a valid UTF-8 string.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="n" optional="false" type="number"/>
    <parameter name="i" optional="true" type="number"/>
    <return type="number"><![CDATA[position (in bytes)]]></return>
  </method>
  <method name="utf8.remove" page="remove" shortdesc="Delete a substring in s" version="Gideros 2016.06"><![CDATA[Delete a substring in s. If neither start nor stop is given, delete the last UTF-8 char in s, otherwise delete char from start to end of s. if stop is given, delete char from start to stop (include start and stop). start and stop can be negative]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="start" optional="true" type="number"/>
    <parameter name="stop" optional="true" type="number"/>
  </method>
  <method name="utf8.reverse" page="reverse" shortdesc="Returns a string that is the string s reversed." version="Gideros 2016.06"><![CDATA[Returns a string that is the string s reversed.]]>
    <parameter name="s" optional="false" type="string"/>
    <return type="string"><![CDATA[reversed string]]></return>
  </method>
  <method name="utf8.sub" page="sub" shortdesc="Returns the substring of s that starts at i and continues until j" version="Gideros 2016.06"><![CDATA[Returns the substring of s that starts at i and continues until j; i and j can be negative. If j is absent, then it is assumed to be equal to -1 (which is the same as the string length). In particular, the call string.sub(s,1,j) returns a prefix of s with length j, and string.sub(s, -i) returns a suffix of s with length i.
If, after the translation of negative indices, i is less than 1, it is corrected to 1. If j is greater than the string length, it is corrected to that length. If, after these corrections, i is greater than j, the function returns the empty string.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="i" optional="false" type="number"/>
    <parameter name="j" optional="true" type="number"/>
    <return type="string"><![CDATA[substring of s that starts at i and continues until j]]></return>
  </method>
  <method name="utf8.title" page="title" shortdesc="Convert UTF-8 string s to title case used to compare by ignore case" version="Gideros 2016.06"><![CDATA[Convert UTF-8 string s to title case used to compare by ignore case. if s is a number, it's treat as a code point and return a convert code point (number). utf8.lower/utf8.upper has the same extension.]]>
    <parameter name="s" optional="false" type="string"/>
    <return type="string"><![CDATA[string in title case]]></return>
  </method>
  <method name="utf8.upper" page="upper" shortdesc="Receives a string and returns a copy of this string with all lowercase letters changed to uppercase. " version="Gideros 2016.06"><![CDATA[Receives a string and returns a copy of this string with all lowercase letters changed to uppercase. All other characters are left unchanged. The definition of what a lowercase letter is depends on the current locale.]]>
    <parameter name="s" optional="false" type="string"/>
    <return type="string"><![CDATA[string in upper case]]></return>
  </method>
  <method name="utf8.width" page="width" shortdesc="calculate the width of UTF-8 string s" version="Gideros 2016.06"><![CDATA[calculate the width of UTF-8 string s. if ambi_is_double is given, the ambiguous width character's width is 2, otherwise it's 1. fullwidth/doublewidth character's width is 2, and other character's width is 1. if default_width is given, it will be the width of unprintable character, used display a non-character mark for these characters. if s is a code point, return the width of this code point.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="ambi_is_double" optional="true" type="boolean"/>
    <parameter name="default_width" optional="true" type="number"/>
    <return type="number"><![CDATA[width]]></return>
  </method>
  <method name="utf8.widthindex" page="widthindex" shortdesc="Return the character index at given location in string s." version="Gideros 2016.06"><![CDATA[Return the character index at given location in string s. this is a reverse operation of utf8.width(). this function return a index of location, and a offset in in UTF-8 encoding. e.g. if cursor is at the second column (middle) of the wide char, offset will be 2. the width of character at idx is returned, also.]]>
    <parameter name="s" optional="false" type="string"/>
    <parameter name="location" optional="false" type="number"/>
    <parameter name="ambi_is_double" optional="true" type="boolean"/>
    <parameter name="default_width" optional="true" type="number"/>
    <return type="number"><![CDATA[character index at given location]]></return>
  </method>
</object>
